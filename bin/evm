#!/usr/bin/env node

const {Command} = require('commander');

const File = require('../src/Filesystem/File');
const Output = require('../src/Console/Output');
const InstallHandler = require('../src/Handlers/InstallHandler');
const UseHandler = require('../src/Handlers/UseHandler');

const program = new Command();

program.name('Environment Version Manager')
    .description('Your one stop shop environment version manager.')
    .version('0.0.14');

program.command('install <version>', 'Install a PHP version')
    .option('-ts, --thread-safe', 'Get a thread safe release (default nts)', false)
    .option('-at, --arch-type <type>', 'Get a release targeting an architecture type (x64/x86)', process.arch)
    .action((version, {threadSafe, archType}) => {
        archType = archType.substring(0, 1) === 'x' ? archType : `x${archType}`;

        if (!['x86', 'x64'].includes(archType)) {
            Output.error('Invalid archType passed.');
            return;
        }

        new InstallHandler({
            version,
            archType,
            threadSafe
        });
    });

program.command('use <version>', 'Activate a PHP version')
    .option('-ts, --thread-safe', 'Use a thread safe release (default nts)', false)
    .option('-at, --arch-type <type>', 'Use a release targeting an architecture type (x64/x86)', process.arch)
    .action((version, {threadSafe, archType}) => {
        archType = archType.substring(0, 1) === 'x' ? archType : `x${archType}`;

        if (!['x86', 'x64'].includes(archType)) {
            Output.error('Invalid archType passed.');
            return;
        }

        new UseHandler({
            version,
            archType,
            threadSafe
        });
    });

program.command('ls', 'List PHP releases installed by evm')
    .action(() => {

    });

program.command('sync', 'Sync version file with server')
    .action(() => {

    });

program.parse(process.argv);

File.createPrerequisiteDirectories();
